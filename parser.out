Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    ESCAPED
    COLON

Grammar

Rule 0     S' -> expression
Rule 1     expression -> plaintext expression
Rule 2     expression -> inner_tag expression
Rule 3     expression -> pholder_tag expression
Rule 4     expression -> empty
Rule 5     pholder_tag -> PERC_LBRACE plaintext RBRACE
Rule 6     inner_tag -> DOL_LBRACE inner_tag_name RBRACE
Rule 7     inner_tag_name -> plaintext inner_tag_cont
Rule 8     inner_tag_name -> pholder_tag inner_tag_cont
Rule 9     inner_tag_cont -> plaintext inner_tag_cont
Rule 10    inner_tag_cont -> pholder_tag inner_tag_cont
Rule 11    inner_tag_cont -> empty
Rule 12    plaintext -> plaintext PLAINTEXT
Rule 13    plaintext -> PLAINTEXT
Rule 14    empty -> <empty>

Terminals, with rules where they appear

COLON                : 
DOL_LBRACE           : 6
ESCAPED              : 
PERC_LBRACE          : 5
PLAINTEXT            : 12 13
RBRACE               : 5 6
error                : 

Nonterminals, with rules where they appear

empty                : 4 11
expression           : 1 2 3 0
inner_tag            : 2
inner_tag_cont       : 7 8 9 10
inner_tag_name       : 6
pholder_tag          : 3 8 10
plaintext            : 1 5 7 9 12

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . plaintext expression
    (2) expression -> . inner_tag expression
    (3) expression -> . pholder_tag expression
    (4) expression -> . empty
    (12) plaintext -> . plaintext PLAINTEXT
    (13) plaintext -> . PLAINTEXT
    (6) inner_tag -> . DOL_LBRACE inner_tag_name RBRACE
    (5) pholder_tag -> . PERC_LBRACE plaintext RBRACE
    (14) empty -> .

    PLAINTEXT       shift and go to state 4
    DOL_LBRACE      shift and go to state 8
    PERC_LBRACE     shift and go to state 5
    $end            reduce using rule 14 (empty -> .)

    pholder_tag                    shift and go to state 1
    plaintext                      shift and go to state 2
    inner_tag                      shift and go to state 3
    expression                     shift and go to state 6
    empty                          shift and go to state 7

state 1

    (3) expression -> pholder_tag . expression
    (1) expression -> . plaintext expression
    (2) expression -> . inner_tag expression
    (3) expression -> . pholder_tag expression
    (4) expression -> . empty
    (12) plaintext -> . plaintext PLAINTEXT
    (13) plaintext -> . PLAINTEXT
    (6) inner_tag -> . DOL_LBRACE inner_tag_name RBRACE
    (5) pholder_tag -> . PERC_LBRACE plaintext RBRACE
    (14) empty -> .

    PLAINTEXT       shift and go to state 4
    DOL_LBRACE      shift and go to state 8
    PERC_LBRACE     shift and go to state 5
    $end            reduce using rule 14 (empty -> .)

    pholder_tag                    shift and go to state 1
    plaintext                      shift and go to state 2
    inner_tag                      shift and go to state 3
    expression                     shift and go to state 9
    empty                          shift and go to state 7

state 2

    (1) expression -> plaintext . expression
    (12) plaintext -> plaintext . PLAINTEXT
    (1) expression -> . plaintext expression
    (2) expression -> . inner_tag expression
    (3) expression -> . pholder_tag expression
    (4) expression -> . empty
    (12) plaintext -> . plaintext PLAINTEXT
    (13) plaintext -> . PLAINTEXT
    (6) inner_tag -> . DOL_LBRACE inner_tag_name RBRACE
    (5) pholder_tag -> . PERC_LBRACE plaintext RBRACE
    (14) empty -> .

    PLAINTEXT       shift and go to state 10
    DOL_LBRACE      shift and go to state 8
    PERC_LBRACE     shift and go to state 5
    $end            reduce using rule 14 (empty -> .)

    pholder_tag                    shift and go to state 1
    plaintext                      shift and go to state 2
    inner_tag                      shift and go to state 3
    expression                     shift and go to state 11
    empty                          shift and go to state 7

state 3

    (2) expression -> inner_tag . expression
    (1) expression -> . plaintext expression
    (2) expression -> . inner_tag expression
    (3) expression -> . pholder_tag expression
    (4) expression -> . empty
    (12) plaintext -> . plaintext PLAINTEXT
    (13) plaintext -> . PLAINTEXT
    (6) inner_tag -> . DOL_LBRACE inner_tag_name RBRACE
    (5) pholder_tag -> . PERC_LBRACE plaintext RBRACE
    (14) empty -> .

    PLAINTEXT       shift and go to state 4
    DOL_LBRACE      shift and go to state 8
    PERC_LBRACE     shift and go to state 5
    $end            reduce using rule 14 (empty -> .)

    pholder_tag                    shift and go to state 1
    plaintext                      shift and go to state 2
    inner_tag                      shift and go to state 3
    expression                     shift and go to state 12
    empty                          shift and go to state 7

state 4

    (13) plaintext -> PLAINTEXT .

    PLAINTEXT       reduce using rule 13 (plaintext -> PLAINTEXT .)
    PERC_LBRACE     reduce using rule 13 (plaintext -> PLAINTEXT .)
    RBRACE          reduce using rule 13 (plaintext -> PLAINTEXT .)
    DOL_LBRACE      reduce using rule 13 (plaintext -> PLAINTEXT .)
    $end            reduce using rule 13 (plaintext -> PLAINTEXT .)


state 5

    (5) pholder_tag -> PERC_LBRACE . plaintext RBRACE
    (12) plaintext -> . plaintext PLAINTEXT
    (13) plaintext -> . PLAINTEXT

    PLAINTEXT       shift and go to state 4

    plaintext                      shift and go to state 13

state 6

    (0) S' -> expression .



state 7

    (4) expression -> empty .

    $end            reduce using rule 4 (expression -> empty .)


state 8

    (6) inner_tag -> DOL_LBRACE . inner_tag_name RBRACE
    (7) inner_tag_name -> . plaintext inner_tag_cont
    (8) inner_tag_name -> . pholder_tag inner_tag_cont
    (12) plaintext -> . plaintext PLAINTEXT
    (13) plaintext -> . PLAINTEXT
    (5) pholder_tag -> . PERC_LBRACE plaintext RBRACE

    PLAINTEXT       shift and go to state 4
    PERC_LBRACE     shift and go to state 5

    plaintext                      shift and go to state 15
    pholder_tag                    shift and go to state 14
    inner_tag_name                 shift and go to state 16

state 9

    (3) expression -> pholder_tag expression .

    $end            reduce using rule 3 (expression -> pholder_tag expression .)


state 10

    (12) plaintext -> plaintext PLAINTEXT .
    (13) plaintext -> PLAINTEXT .

  ! reduce/reduce conflict for PLAINTEXT resolved using rule 12 (plaintext -> plaintext PLAINTEXT .)
  ! reduce/reduce conflict for DOL_LBRACE resolved using rule 12 (plaintext -> plaintext PLAINTEXT .)
  ! reduce/reduce conflict for PERC_LBRACE resolved using rule 12 (plaintext -> plaintext PLAINTEXT .)
  ! reduce/reduce conflict for $end resolved using rule 12 (plaintext -> plaintext PLAINTEXT .)
  ! reduce/reduce conflict for RBRACE resolved using rule 12 (plaintext -> plaintext PLAINTEXT .)
    PLAINTEXT       reduce using rule 12 (plaintext -> plaintext PLAINTEXT .)
    PERC_LBRACE     reduce using rule 12 (plaintext -> plaintext PLAINTEXT .)
    RBRACE          reduce using rule 12 (plaintext -> plaintext PLAINTEXT .)
    DOL_LBRACE      reduce using rule 12 (plaintext -> plaintext PLAINTEXT .)
    $end            reduce using rule 12 (plaintext -> plaintext PLAINTEXT .)

  ! PLAINTEXT       [ reduce using rule 13 (plaintext -> PLAINTEXT .) ]
  ! DOL_LBRACE      [ reduce using rule 13 (plaintext -> PLAINTEXT .) ]
  ! PERC_LBRACE     [ reduce using rule 13 (plaintext -> PLAINTEXT .) ]
  ! $end            [ reduce using rule 13 (plaintext -> PLAINTEXT .) ]
  ! RBRACE          [ reduce using rule 13 (plaintext -> PLAINTEXT .) ]


state 11

    (1) expression -> plaintext expression .

    $end            reduce using rule 1 (expression -> plaintext expression .)


state 12

    (2) expression -> inner_tag expression .

    $end            reduce using rule 2 (expression -> inner_tag expression .)


state 13

    (5) pholder_tag -> PERC_LBRACE plaintext . RBRACE
    (12) plaintext -> plaintext . PLAINTEXT

    RBRACE          shift and go to state 18
    PLAINTEXT       shift and go to state 17


state 14

    (8) inner_tag_name -> pholder_tag . inner_tag_cont
    (9) inner_tag_cont -> . plaintext inner_tag_cont
    (10) inner_tag_cont -> . pholder_tag inner_tag_cont
    (11) inner_tag_cont -> . empty
    (12) plaintext -> . plaintext PLAINTEXT
    (13) plaintext -> . PLAINTEXT
    (5) pholder_tag -> . PERC_LBRACE plaintext RBRACE
    (14) empty -> .

    PLAINTEXT       shift and go to state 4
    PERC_LBRACE     shift and go to state 5
    RBRACE          reduce using rule 14 (empty -> .)

    pholder_tag                    shift and go to state 19
    plaintext                      shift and go to state 20
    inner_tag_cont                 shift and go to state 21
    empty                          shift and go to state 22

state 15

    (7) inner_tag_name -> plaintext . inner_tag_cont
    (12) plaintext -> plaintext . PLAINTEXT
    (9) inner_tag_cont -> . plaintext inner_tag_cont
    (10) inner_tag_cont -> . pholder_tag inner_tag_cont
    (11) inner_tag_cont -> . empty
    (12) plaintext -> . plaintext PLAINTEXT
    (13) plaintext -> . PLAINTEXT
    (5) pholder_tag -> . PERC_LBRACE plaintext RBRACE
    (14) empty -> .

    PLAINTEXT       shift and go to state 10
    PERC_LBRACE     shift and go to state 5
    RBRACE          reduce using rule 14 (empty -> .)

    plaintext                      shift and go to state 20
    pholder_tag                    shift and go to state 19
    inner_tag_cont                 shift and go to state 23
    empty                          shift and go to state 22

state 16

    (6) inner_tag -> DOL_LBRACE inner_tag_name . RBRACE

    RBRACE          shift and go to state 24


state 17

    (12) plaintext -> plaintext PLAINTEXT .

    RBRACE          reduce using rule 12 (plaintext -> plaintext PLAINTEXT .)
    PLAINTEXT       reduce using rule 12 (plaintext -> plaintext PLAINTEXT .)


state 18

    (5) pholder_tag -> PERC_LBRACE plaintext RBRACE .

    PLAINTEXT       reduce using rule 5 (pholder_tag -> PERC_LBRACE plaintext RBRACE .)
    PERC_LBRACE     reduce using rule 5 (pholder_tag -> PERC_LBRACE plaintext RBRACE .)
    RBRACE          reduce using rule 5 (pholder_tag -> PERC_LBRACE plaintext RBRACE .)
    DOL_LBRACE      reduce using rule 5 (pholder_tag -> PERC_LBRACE plaintext RBRACE .)
    $end            reduce using rule 5 (pholder_tag -> PERC_LBRACE plaintext RBRACE .)


state 19

    (10) inner_tag_cont -> pholder_tag . inner_tag_cont
    (9) inner_tag_cont -> . plaintext inner_tag_cont
    (10) inner_tag_cont -> . pholder_tag inner_tag_cont
    (11) inner_tag_cont -> . empty
    (12) plaintext -> . plaintext PLAINTEXT
    (13) plaintext -> . PLAINTEXT
    (5) pholder_tag -> . PERC_LBRACE plaintext RBRACE
    (14) empty -> .

    PLAINTEXT       shift and go to state 4
    PERC_LBRACE     shift and go to state 5
    RBRACE          reduce using rule 14 (empty -> .)

    pholder_tag                    shift and go to state 19
    plaintext                      shift and go to state 20
    inner_tag_cont                 shift and go to state 25
    empty                          shift and go to state 22

state 20

    (9) inner_tag_cont -> plaintext . inner_tag_cont
    (12) plaintext -> plaintext . PLAINTEXT
    (9) inner_tag_cont -> . plaintext inner_tag_cont
    (10) inner_tag_cont -> . pholder_tag inner_tag_cont
    (11) inner_tag_cont -> . empty
    (12) plaintext -> . plaintext PLAINTEXT
    (13) plaintext -> . PLAINTEXT
    (5) pholder_tag -> . PERC_LBRACE plaintext RBRACE
    (14) empty -> .

    PLAINTEXT       shift and go to state 10
    PERC_LBRACE     shift and go to state 5
    RBRACE          reduce using rule 14 (empty -> .)

    plaintext                      shift and go to state 20
    pholder_tag                    shift and go to state 19
    inner_tag_cont                 shift and go to state 26
    empty                          shift and go to state 22

state 21

    (8) inner_tag_name -> pholder_tag inner_tag_cont .

    RBRACE          reduce using rule 8 (inner_tag_name -> pholder_tag inner_tag_cont .)


state 22

    (11) inner_tag_cont -> empty .

    RBRACE          reduce using rule 11 (inner_tag_cont -> empty .)


state 23

    (7) inner_tag_name -> plaintext inner_tag_cont .

    RBRACE          reduce using rule 7 (inner_tag_name -> plaintext inner_tag_cont .)


state 24

    (6) inner_tag -> DOL_LBRACE inner_tag_name RBRACE .

    PLAINTEXT       reduce using rule 6 (inner_tag -> DOL_LBRACE inner_tag_name RBRACE .)
    DOL_LBRACE      reduce using rule 6 (inner_tag -> DOL_LBRACE inner_tag_name RBRACE .)
    PERC_LBRACE     reduce using rule 6 (inner_tag -> DOL_LBRACE inner_tag_name RBRACE .)
    $end            reduce using rule 6 (inner_tag -> DOL_LBRACE inner_tag_name RBRACE .)


state 25

    (10) inner_tag_cont -> pholder_tag inner_tag_cont .

    RBRACE          reduce using rule 10 (inner_tag_cont -> pholder_tag inner_tag_cont .)


state 26

    (9) inner_tag_cont -> plaintext inner_tag_cont .

    RBRACE          reduce using rule 9 (inner_tag_cont -> plaintext inner_tag_cont .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 10 resolved using rule (plaintext -> plaintext PLAINTEXT)
WARNING: rejected rule (plaintext -> PLAINTEXT) in state 10
